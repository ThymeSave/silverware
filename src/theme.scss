@use '@angular/material' as mat;
@use 'sass:map';
@import "variables";

// Fonts
@import 'https://fonts.googleapis.com/css?family=Material+Icons+Outlined';

$fontFamily: 'ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"';
$fontConfig: (
  display-4: mat.define-typography-level(112px, 112px, 400, $fontFamily, -0.0134em),
  display-3: mat.define-typography-level(56px, 56px, 400, $fontFamily, -0.0089em),
  display-2: mat.define-typography-level(45px, 48px, 400, $fontFamily, 0.0000em),
  display-1: mat.define-typography-level(34px, 40px, 400, $fontFamily, 0.0074em),
  headline: mat.define-typography-level(24px, 32px, 400, $fontFamily, 0.0000em),
  title: mat.define-typography-level(20px, 32px, 500, $fontFamily, 0.0075em),
  subheading-2: mat.define-typography-level(16px, 28px, 400, $fontFamily, 0.0094em),
  subheading-1: mat.define-typography-level(15px, 24px, 500, $fontFamily, 0.0067em),
  body-2: mat.define-typography-level(16px, 24px, 500, $fontFamily, 0.0179em),
  body-1: mat.define-typography-level(16px, 26px, 400, $fontFamily, 0.0179em),
  button: mat.define-typography-level(16px, 18px, 500, $fontFamily, 0.0893em),
  caption: mat.define-typography-level(16px, 20px, 400, $fontFamily, 0.0333em),
  input: mat.define-typography-level(inherit, 1.7, 400, $fontFamily, 1.5px)
);

// Compute font config
@include mat.core($fontConfig);

$mat-primary: (
  main: #1d9e79,
  lighter: #b6d8ce,
  darker: #1d9e79,
  050: #fffff,
  100: #d1ebe4,
  200: #a4Dbc9,
  300: #77c4ae,
  400: #4ab193,
  500: #1d9e79,
  600: #177e60,
  700: #115e48,
  800: #0b3f30,
  900: #051f18,
  contrast : (
    main: #FFFFFF,
    lighter: #000000,
    darker: #FFFFFF,
  )
);
$theme-primary: mat.define-palette($mat-primary, main, lighter, darker);

$mat-accent: (
  main: #cccccc,
  lighter: #d7d7d7,
  darker: #5c5c5c,
  050: #f2f2f2,
  100: #e6e6e6,
  200: #cccccc,
  300: #b3b3b3,
  400: #999999,
  500: #808080,
  600: #666666,
  700: #4d4d4d,
  800: #333333,
  900: #1a1a1a,
  contrast : (
    main: #000000,
    lighter: #000000,
    darker: #FFFFFF,
  )
);
$theme-accent: mat.define-palette($mat-accent, main, lighter, darker);

$mat-warn: (
  main: #FF9D9D,
  lighter: #FF9D9D,
  darker: #b00020,
  contrast : (
    main: #FFFFFF,
    lighter: #000000,
    darker: #FFFFFF,
  )
);
$theme-warn: mat.define-palette($mat-warn, main, lighter, darker);

$theme: (
  primary: $theme-primary,
  accent: $theme-accent,
  warn: $theme-warn,
  is-dark: true,
  foreground: $mat-dark-theme-foreground,
  background: $mat-dark-theme-background,
);

// Define color config and expose helper for other scss files to reuse the theme in an easy way
$color-config: mat.get-color-config($theme);
@function get-color($color, $shade:null) {
  @if (map-has-key($color-config, $color) == false) {
    @error "Theme has no color #{$color}"
  }

  @if ($shade == null) {
    @return map.get($color-config, $color)
  }

  @if (map-has-key($color-config, $color, $shade) == false) {
    @error "Theme color #{$color} has no shade #{$shade}"
  }

  @return map.get($color-config, $color, $shade)
}

// Theme Init
@include mat.all-component-themes($theme);

body {
  background: map.get($color-config, "background", "background");
  color: map.get($color-config, "foreground", "foreground")
}
